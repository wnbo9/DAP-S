% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/susie_inf.R
\name{susie_inf}
\alias{susie_inf}
\title{SuSiE with random effects}
\usage{
susie_inf(
  bhat = NULL,
  shat = NULL,
  z = NULL,
  var_y = NULL,
  n,
  L,
  LD = NULL,
  V = NULL,
  Dsq = NULL,
  est_ssq = TRUE,
  ssq = NULL,
  ssq_range = c(0, 1),
  pi = NULL,
  null_weight = 0,
  est_sigmasq = TRUE,
  est_tausq = TRUE,
  sigmasq = 1,
  tausq = 0,
  method = "moments",
  sigmasq_range = NULL,
  tausq_range = NULL,
  PIP = NULL,
  mu = NULL,
  maxiter = 100,
  PIP_tol = 0.001,
  verbose = FALSE
)
}
\arguments{
\item{bhat}{Vector of effect size estimates}

\item{shat}{Standard error of bhat}

\item{z}{Vector of z-scores}

\item{var_y}{Variance of y}

\item{n}{Sample size}

\item{L}{Number of modeled causal effects}

\item{LD}{LD matrix}

\item{V}{Precomputed p x p matrix of eigenvectors of X'X}

\item{Dsq}{Precomputed length-p vector of eigenvalues of X'X}

\item{est_ssq}{Estimate prior effect size variances s^2 using MLE}

\item{ssq}{Length-L initialization s^2 for each effect}

\item{ssq_range}{Lower and upper bounds for each s^2, if estimated}

\item{pi}{Length-p vector of prior causal probability for each SNP; must sum to 1}

\item{est_sigmasq}{Estimate variance sigma^2}

\item{est_tausq}{Estimate both variances sigma^2 and tau^2}

\item{sigmasq}{Initial value for sigma^2}

\item{tausq}{Initial value for tau^2}

\item{method}{One of c('moments','MLE')}

\item{sigmasq_range}{Lower and upper bounds for sigma^2, if estimated using MLE}

\item{tausq_range}{Lower and upper bounds for tau^2, if estimated using MLE}

\item{PIP}{p x L initializations of PIPs}

\item{mu}{p x L initializations of mu}

\item{maxiter}{Maximum number of SuSiE iterations}

\item{PIP_tol}{Convergence threshold for PIP difference between iterations}

\item{verbose}{Whether to print update information}
}
\value{
List with results
}
\description{
SuSiE with random effects
}
\examples{
# Set random seed for reproducibility
set.seed(2025)
n <- 5000  # Number of samples
p <- 500   # Number of SNPs
MAF <- 0.1  # Minor allele frequency
Ltrue <- 5  # Number of true causal variants
ssq <- 0.01  # Effect size variance
sigmasq <- 1  # Error variance

# Generate genotype matrix X
X <- matrix(rbinom(n*p, 2, MAF), nrow=n, ncol=p)
X <- scale(X, center=TRUE, scale=FALSE)

# Generate sparse effects
b <- rep(0, p)
inds <- sample(1:p, size=Ltrue, replace=FALSE)
b[inds] <- rnorm(Ltrue) * sqrt(ssq)
order_idx <- order(inds)
cat('True effects:', inds[order_idx], '\n')
cat('Effect sizes:', b[inds[order_idx]], '\n')

# Generate infinitesimal effects
tausq <- 1e-3
infinitesimal <- X \%*\% rnorm(p) * sqrt(tausq)
effects <- X \%*\% b + infinitesimal
y <- effects + rnorm(n) * sqrt(sigmasq)
y <- scale(y, center = TRUE, scale = FALSE)
cat('Total fraction of variance explained by SNPs:', var(as.vector(effects))/var(y), '\n')

# Generate summary statistics
res = susieR::univariate_regression(X, y)
suff_stat <- susieR::compute_suff_stat(X, as.vector(y), standardize = FALSE)
LD <- cov2cor(suff_stat$XtX)
z <- res$betahat/res$sebetahat

# Work on original scale without estimating infinitesimal effects
output <- susie_inf(bhat = res$betahat, shat = res$sebetahat, var_y = var(y), est_tausq = FALSE, n=n, L=5, LD = LD, null_weight = 0.3)
output$sigmasq
output$tausq

# Work on original scale with estimating infinitesimal effects
output2 <- susie_inf(bhat = res$betahat, shat = res$sebetahat, var_y = var(y), n=n, L=5, LD = LD, null_weight = 0.3)
output2$sigmasq
output2$tausq

plot(output2$spip, output$spip, xlab = "PIP of SuSiE-inf", ylab = "PIP of SuSiE")
abline(a = 0,b = 1,col = "skyblue",lty = "dashed")

# Work on standardized scale
output3 <- susie_inf(z = z, n = n, L = 5, LD = LD, null_weight = 0.3)
output3$sigmasq
output3$tausq
}
